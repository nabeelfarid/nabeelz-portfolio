{
  "portfolio": [
    {
      "id": "100",
      "code": "12E",
      "image": "kulfi.png",
      "title": "Virtual Kulfi",
      "subtitle": "Create a virtual kulfi for your loved ones",
      "description": "One of the principles of JAMstack is that of pre-rendering. In other words, it generates your site into a collection of static assets in advance, so that it can be served to your visitors with maximum speed and minimum overhead from a CDN or other optimized static hosting environment. But if we are going to pre-generate our sites ahead of time, how do we make them feel dynamic? How do we build sites that need to change often? How do we work with things like user generated content?",
      "techStack": "Gatsby, GraphQL, Netlify, FaunaDB, Formik, Storybook6, Material-UI",
      "repo": "https://github.com/nabeelfarid/virtual-kulfi",
      "url": "https://vkulfi.netlify.app/",
      "article": "https://css-tricks.com/static-first-pre-generated-jamstack-sites-with-serverless-rendering-as-a-fallback/",
      "todos": "Types for GraphQL schema; Add components to StoryBook; Deploy StoryBook"
    },
    {
      "id": "95",
      "code": "12D",
      "image": "bookmarker.png",
      "title": "Bookmarking Application",
      "subtitle": "A site to store and publish any interesting articles I come across in my daily technology reading.",
      "description": "Generates a static home page with a list of all the bookmarks on demand",
      "techStack": "FaunaDB, GraphQL, Netlify, Gatsby",
      "repo": "https://github.com/nabeelfarid/bookmarker",
      "url": "https://nf-bookmarker.netlify.app/",
      "article": "https://www.smashingmagazine.com/2019/10/bookmarking-application-faunadb-netlify-11ty/",
      "todos": "Types for GraphQL schema"
    },
    {
      "id": "90",
      "code": "12C",
      "image": "todo.png",
      "title": "Todo App",
      "subtitle": "JAMStack Todo app with Netlify, Gatsby, GraphQL, and FaunaDB.",
      "description": "Building a Serverless JAMStack Todo app with Netlify, Gatsby, GraphQL, and FaunaDB.",
      "techStack": "GraphQL, GraphQL, FaunaDB, Netlify, Gatsby",
      "repo": "https://github.com/nabeelfarid/jamstack-todo",
      "url": "https://nf-jamstack-todo.netlify.app/",
      "article": "https://egghead.io/playlists/building-a-serverless-jamstack-todo-app-with-netlify-gatsby-graphql-and-faunadb-53bb",
      "todos": "Types for GraphQL schema"
    },
    {
      "id": "85",
      "code": "12B",
      "image": "todo.png",
      "title": "FaunaDB CRUD",
      "subtitle": "Building Serverless CRUD apps with Netlify Functions and FaunaDB",
      "description": "Building Serverless CRUD apps with Netlify Functions and FaunaDB. Already done in project 12C Todo App",
      "techStack": "FaunaDB, GraphQL, Netlify, Gatsby",
      "repo": "https://github.com/nabeelfarid/jamstack-todo",
      "url": "https://nf-jamstack-todo.netlify.app/",
      "article": "https://www.netlify.com/blog/2018/07/09/building-serverless-crud-apps-with-netlify-functions-faunadb/",
      "todos": "Types for GraphQL schema"
    },
    {
      "id": "80",
      "code": "12A",
      "image": "blogsite.png",
      "title": "Blog Site",
      "subtitle": "in Gatsby.js and Contentful with TypeScript and Deploy on Netlify.",
      "description": "A Blog site in Gatsby.js and Contentful with TypeScript and Deploy on Netlify. Built with gated content, available only for logged-in users. However we still want the blogs to be indexed for SEO reasons, and would like visitors (not logged in) have access to 3 free blogs (just like Medium), after that we want to user to get a “limited” access to each page (maybe 20 lines or so), just like news website sometimes do. The logged-in users will have unlimited access to all the blogs. ",
      "techStack": "Gatsby, GraphQL, Contentful, TypeScript, Netlify Authentication, Netlify Functions",
      "repo": "https://github.com/nabeelfarid/gatsby-contentful-blogsite",
      "url": "https://nf-gatsby-contentful-blogsite.netlify.app/",
      "article": "https://ibaslogic.com/gatsby-with-contentful-cms/",
      "todos": "Try Firebase instead of Netlify Authentication; Types for GraphQL schema"
    },
    {
      "id": "75",
      "code": "11",
      "image": "taskbox.png",
      "title": "Taskbox",
      "subtitle": "Building a Taskbox React Component in TypeScript using Storybook and Publishing it on Bit",
      "description": "Building a Taskbox React Component in TypeScript using Storybook and Publishing it on Bit. A task management UI React component (similar to Asana), complete with multiple item types and states. Deployed Storybook on Chromatic via Github Workflow. Taskbox components collection has also been deployed on Bit",
      "techStack": "React, TypeScript, Storybook, Bit",
      "repo": "https://github.com/nabeelfarid/taskbox",
      "url": "https://github.com/nabeelfarid/taskbox#demo-links-for-storybook-and-bitdev",
      "article": "https://www.learnstorybook.com/intro-to-storybook/react/en/get-started/",
      "todos": "On Bit website, the components doesn't get loaded in the preview tab for some reason, however the components work when installed through npm"
    },
    {
      "id": "70",
      "code": "10",
      "image": "multistep.png",
      "title": "Multi-Step Form",
      "subtitle": "Building a Multi-Step Form with Formik, Yup, and Material UI using TypeScript",
      "description": "Building a Multi-Step Form with Formik, Yup, and Material-UI using TypeScript",
      "techStack": "Formik, Yup, Material-UI, React, TypeScript",
      "repo": "https://github.com/nabeelfarid/formik-multistep",
      "url": "https://nf-formik-multistep.netlify.app/",
      "article": "https://webomnizz.com/working-with-react-formik-and-yup/",
      "todos": ""
    },
    {
      "id": "65",
      "code": "9",
      "image": "diaries.png",
      "title": "Diaries",
      "subtitle": "Building Diaries App using React, Mirage, Redux Toolkit, Formik, Yup, and Material UI using TypeScript",
      "description": "Building Diaries App using React, Mirage, Redux Toolkit, Formik, Yup, and Material UI using TypeScript. ",
      "techStack": "Mirage, Redux Toolkit, Formik, Yup, Material-UI, React, TypeScript",
      "repo": "https://github.com/nabeelfarid/diaries-app",
      "url": "https://nf-diaries-app.netlify.app/",
      "article": "https://www.smashingmagazine.com/2020/08/redux-real-world-application/",
      "todos": ""
    },
    {
      "id": "60",
      "code": "8",
      "image": "spacex.png",
      "title": "SpaceX",
      "subtitle": "Building a SpaceX Client Application with React, TypeScript, Appllo Client 3, and SpaceX API using Test-Driven Development (TDD) and deployed as a PWA",
      "description": "Building a SpaceX Client Application with React, TypeScript, Appllo Client 3, and SpaceX API using Test-Driven Development (TDD) and deployed as a PWA",
      "techStack": "GraphQL, Apollo Client, SpaceX API, TDD, Material-UI, React, TypeScript, React Testing Library, Jest",
      "repo": "https://github.com/nabeelfarid/spacex",
      "url": "https://nf-spacex.netlify.app/",
      "article": "https://blog.logrocket.com/build-a-graphql-react-app-with-typescript/",
      "todos": "Refactoring the components further into child components"
    },
    {
      "id": "55",
      "code": "7B",
      "image": "timer.png",
      "title": "Timer",
      "subtitle": "Building a Timer App using React, TypeScript with Test Driven Development",
      "description": "Building a Timer App using React, TypeScript with Test Driven Development and CI/CD Pipeline",
      "techStack": "React, Typescript, React Testing Library, Jest, Travis CI/CD",
      "repo": "https://github.com/nabeelfarid/timer-app",
      "url": "https://github.com/nabeelfarid/timer-app/blob/main/README.md#demo-links",
      "article": "https://www.toptal.com/react/tdd-react-user-stories-to-development",
      "todos": "Refactor Timer component further into child components, like TimerDisplay, TimerControls etc and test them individually"
    },
    {
      "id": "50",
      "code": "7A2",
      "image": "quiz-pwa.png",
      "title": "Quiz PWA",
      "subtitle": "Rebuilding the Quiz App as a Progressive Web App (PWA) with Offline Capability and Push Notifications",
      "description": "Rebuilding the Quiz App as a Progressive Web App (PWA) with Offline Capability and Push Notifications",
      "techStack": "React, Typescript, Bootstrap UI, Service Worker with Cache Versioning, Firebase Push Notification",
      "repo": "https://github.com/nabeelfarid/quiz-app/tree/quiz-app-pwa",
      "url": "https://nf-quiz-app-pwa.netlify.app/",
      "article": "https://www.freecodecamp.org/news/how-to-build-a-quiz-app-using-react-and-typescript/",
      "todos": "Hide the bash command panel for generating push notifications behind a button click."
    },
    {
      "id": "45",
      "code": "7A1",
      "image": "expense-tracker-ts.png",
      "title": "Expense Tracker TS",
      "subtitle": "Rebuilding the Expense Tracker App with TypeScript including Progressive Web App (PWA) with Offline Capability and Push Notifications",
      "description": "Rebuilding the Expense Tracker App with TypeScript including Progressive Web App (PWA) with Offline Capability and Push Notifications",
      "techStack": "React, UseReducer, Typescript, Service Worker with Cache Versioning, Firebase Push Notification",
      "repo": "https://github.com/nabeelfarid/expense-tracker/tree/create-react-app-ts-pwa",
      "url": "https://nf-expense-tracker-ts.netlify.app/",
      "article": "https://youtu.be/XuFDcZABiDQ",
      "todos": "PWA Functionality and Firebase Push Notifications"
    },
    {
      "id": "40",
      "code": "6",
      "image": "quiz-ts.png",
      "title": "Quiz",
      "subtitle": "Quiz App with React and TypeScript",
      "description": "Quiz App with React and TypeScript",
      "techStack": "React, Typescript, Bootstrap UI",
      "repo": "https://github.com/nabeelfarid/quiz-app/",
      "url": "https://nf-quiz-app.netlify.app/",
      "article": "https://www.freecodecamp.org/news/how-to-build-a-quiz-app-using-react-and-typescript/",
      "todos": ""
    },
    {
      "id": "30",
      "code": "4",
      "image": "red-queen-race.png",
      "title": "Red Queen Race",
      "subtitle": "Red Queen’s Race with Web Animation API and React Hooks",
      "description": "Red Queen’s Race with Web Animation API and React Hooks",
      "techStack": "React, Web Animations API",
      "repo": "https://github.com/nabeelfarid/red-queen-race-react",
      "url": "https://nf-red-queen-race.netlify.app/",
      "article": "https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API",
      "todos": ""
    },
    {
      "id": "25",
      "code": "3",
      "image": "shoes-store.png",
      "title": "Shoes Store",
      "subtitle": "Building a Shoes Store with React Router V6",
      "description": "Building a Shoes Store with React Router V6",
      "techStack": "React, React Router V6",
      "repo": "https://github.com/nabeelfarid/shoe-store",
      "url": "https://nf-shoes-store.netlify.app/",
      "article": "https://youtu.be/4NpGzBEySvI",
      "todos": ""
    },
    {
      "id": "20",
      "code": "2",
      "image": "covid-tracker.png",
      "title": " COVID-19 Tracker",
      "subtitle": "Building a COVID-19 Tracker App using React, Material-UI, Chart.js",
      "description": "Building a COVID-19 Tracker App using React, Material-UI, Chart.js",
      "techStack": "React, Material-UI, Chart.js, Disease.sh COVID-19 API",
      "repo": "https://github.com/nabeelfarid/shoe-store",
      "url": "https://nf-covid-tracker.netlify.app/",
      "article": "https://youtu.be/khJlrj3Y6Ls",
      "todos": "Make use of React Suspense"
    },
    {
      "id": "15",
      "code": "1",
      "image": "expense-tracker-ts.png",
      "title": "Expense Tracker",
      "subtitle": "Building an Expense Tracker App using React Hooks and Context API",
      "description": "Building an Expense Tracker App using React Hooks and Context API",
      "techStack": "React, Hooks, Context API",
      "repo": "https://github.com/nabeelfarid/expense-tracker/",
      "url": "https://nf-expense-tracker.netlify.app/",
      "article": "https://youtu.be/XuFDcZABiDQ",
      "todos": "Refactor src into folders like components, models etc."
    }
  ]
}
